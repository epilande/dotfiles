# vim:ft=tmux

##############################
# => KEY BINDINGS
##############################

# reload config file
bind r source-file ~/.config/tmux/tmux.conf \; display "Config Reloaded! üöÄ"

# quickly open a new window
bind N new-window

# split window and fix path for tmux 1.9
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# pane movement shortcuts
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# bind -r C-h select-window -t :-
# bind -r C-l select-window -t :+
bind -r C-h previous-window
bind -r C-l next-window

# Resize pane shortcuts
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# Swapping windows
bind -r < swap-window -d -t -1
bind -r > swap-window -d -t +1

bind X confirm-before -p "Kill current session? (y/n)" "kill-session"
bind N command-prompt -p "New session name: " "new-session -s %%"

bind -n M-t display-menu -y C -x C -T "#[align=centre fg=green]Tmux Toolbox" \
  "New Window"                         c   { new-window } \
  "New Session"                        N   { command-prompt -p "New session name: " "new -s %%" } \
  "Choose Window"                      w   { choose-window } \
  "Choose Session"                     s   { choose-session } \
  "" \
  "Split Horizontal"                   %   { split-window -v -c "#{pane_current_path}" } \
  "Split Vertical"                     '"' { split-window -h -c "#{pane_current_path}" } \
  "Main Horizontal"                    1   { select-layout main-horizontal; resize-pane -t 1 -y 70% } \
  "Main Vertical"                      2   { select-layout main-vertical; resize-pane -t 1 -x 70% } \
  "" \
  "Kill Pane"                          x   { kill-pane } \
  "Kill Window"                        W   { confirm-before -p "Kill current window? (y/n)" "kill-window"  } \
  "Kill Session"                       X   { confirm-before -p "Kill current session? (y/n)" "kill-session"  } \
  "" \
  "Move Pane ‚Üê"                        "{" { swap-pane -U } \
  "Move Pane ‚Üí"                        "}" { swap-pane -D } \
  "Convert Pane into Window"           !   { break-pane } \
  "Toggle Pane sync"                   y   { set -w synchronize-panes } \
  "Respawn"                            R   { respawn-pane -k } \
  "#{?pane_marked,Unmark,Mark}"        m   { select-pane -m } \
  "#{?pane_marked_set,,-}Swap Marked"  S   { swap-pane } \
  "" \
  "Rename Window"                      ,   { command-prompt -I "#{window_name}" "rename-window %%" } \
  "Copy Mode"                          M-y { copy-mode } \
  "#{?window_zoomed_flag,Unzoom,Zoom}" z   { resize-pane -Z }

# "#{?@sync-panes,Disable,Enable} Pane Sync" y { if -F "#{@sync-panes}" "set -w @sync-panes 0; set -w synchronize-panes off" "set -w @sync-panes 1; set -w synchronize-panes on" } \

# more settings to make copy-mode more vim-like
# unbind [
bind Escape copy-mode

# unbind p
bind P paste-buffer

# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
# bind -T copy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Smart pane switching with awareness of vim splits
# vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# switch back to last session
bind b switchc -l
# switch between windows
bind C-a last-window

# tile all windows
unbind =
bind = select-layout tiled

# Display LazyGit
# bind -n M-g display-popup -d '#{pane_current_path}' -w 90% -h 90% -E lazygit
# Temp fix, workaround for lazygit colors https://github.com/jesseduffield/lazygit/issues/3668
bind -n M-g display-popup -d '#{pane_current_path}' -w 90% -h 90% -E env TERM=screen-256color lazygit 

# toggle notes session
bind -n M-n \
  if-shell -F "#{==:#{session_name},notes}" \
    "detach-client" \
    "display-popup -w 90% -h 90% -E 'tmux new-session -A -s notes'"

# toggle yazi
bind -n M-f display-popup -d '#{pane_current_path}' -w 90% -h 75% -E yazi

# bind -r n \
# bind -r n run-shell "\
#   current_session=$(tmux display-message -p '#S'); \
#   if [ \"\$current_session\" = \"notes\" ]; then \
#     tmux switch-client -l; \
#   else \
#     tmux switch-client -t notes; \
#   fi"
# bind -r n display-popup -w 90% -h 90% -E "tmux new-session -A -s notes"
# bind-key -n C-n display-popup -E lvim -c ":ObsidianNew"

# Fuzzy find window switcher
bind C-f display-popup -E 'zsh -ic "tmw"'

